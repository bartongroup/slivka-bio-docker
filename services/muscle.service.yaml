---
slivka-version: 0.8.3
name: MUSCLE
description: MUSCLE is one of the best-performing multiple alignment 
  programs according to published benchmark tests, with accuracy and 
  speed that are consistently better than CLUSTALW. MUSCLE can align 
  hundreds of sequences in seconds. Most users learn everything they 
  need to know about MUSCLE in a few minutesâ€”only a handful of 
  command-line options are needed to perform common alignment tasks.
author: Robert C. Edgar
version: '3.8.1551'
license: Public Domain

classifiers:
- 'Topic :: Computational biology :: Sequence analysis'
- 'Operation :: Analysis :: Sequence analysis :: Sequence alignment ::
  Multiple sequence alignment'

parameters:
  input:
    name: Input file
    type: file
    required: true

  anchor:
    name: Anchor optimisation
    description: Enable/disable anchor optimization in tree dependent
      refinement iterations
    type: choice
    required: false
    choices:
      enable: anchors
      disable: noanchors
    default: enable

  brenner:
    name: Root alignment computation method
    description: Use Steven Brenner's method for computing the root
      alignment.
    type: boolean
    default: false
    required: false
  dimer:
    name: Dimer
    description: Use dimer approximation for the SP score (faster,
      slightly less accurate)
    type: boolean
    default: false
    required: false

  diagonal:
    name: Diagonal
    description: Use diagonal optimizations. Faster, especially for
      closely related sequences, but may be less accurate.
    type: boolean
    default: false
    required: false
  diagonal-first:
    name: Diagonal 1
    description: Use diagonal optimizations in first iteration
      (faster for similar sequences)
    type: boolean
    default: false
    required: false

  profile-scoring:
    name: Profile scoring method
    description: le - use log-expectation profile score VTML240 
      (default for amino acid sequences). sp - use sum-of-pairs 
      protein profile score (PAM200).  sv - use sum-of-pairs profile
      score (VTML240)
    type: choice
    required: false
    choices:
      default: null
      le: le
      sp: sp
      sv: sv
    default: default

  sequence-type:
    name: Sequence type
    description: Sequence type - Amino acid/Nucleotide
    type: choice
    choices:
      auto: auto
      protein: protein
      dna: dna
      rna: rna
    default: auto

  maxiters:
    name: Maxiters
    description: Maximum number of iterations (integer, default 16)
    type: int
    min: 1
    max: 100
    default: 16

  diagonal-break:
    name: Diagonal break
    description: Maximum distance between two diagonals that allows 
      them to merge into one diagonal
    type: int
    min: 1
    max: 100
    default: 1

  diagonal-length:
    name: Diagonal length
    description: Minimum length of diagonal
    type: int
    min: 2
    max: 100
    default: 24

  diagonal-margin:
    name: Diagonal margin
    description: Discard this many positions at ends of diagonal
    type: int
    min: 1
    max: 100
    default: 5

  anchor-spacing:
    name: Anchor spacing
    description: Minimum spacing between anchor columns
    type: int
    min: 2
    max: 1000
    default: 32

  matrix:
    name: Matrix
    description: Substitution Matrix to use
    type: choice
    default: blosum62
    choices:
      blosum100: BLOSUM100
      blosum30: BLOSUM30
      blosum35: BLOSUM35
      blosum40: BLOSUM40
      blosum45: BLOSUM45
      blosum50: BLOSUM50
      blosum55: BLOSUM55
      blosum60: BLOSUM60
      blosum62: BLOSUM62
      blosum65: BLOSUM65
      blosum70: BLOSUM70
      blosum75: BLOSUM75
      blosum80: BLOSUM80
      blosum85: BLOSUM85
      blosum90: BLOSUM90
      blosumn: BLOSUMN
      dayhoff: DAYHOFF
      gonnet: GONNET
      identity: IDENTITY
      match: MATCH
      nuc.4.2: NUC.4.2
      nuc.4.4: NUC.4.4
      pam10: PAM10
      pam100: PAM100
      pam110: PAM110
      pam120: PAM120
      pam130: PAM130
      pam140: PAM140
      pam150: PAM150
      pam160: PAM160
      pam170: PAM170
      pam180: PAM180
      pam190: PAM190
      pam20: PAM20
      pam200: PAM200
      pam210: PAM210
      pam220: PAM220
      pam230: PAM230
      pam240: PAM240
      pam250: PAM250
      pam260: PAM260
      pam270: PAM270
      pam280: PAM280
      pam290: PAM290
      pam30: PAM30
      pam300: PAM300
      pam310: PAM310
      pam320: PAM320
      pam330: PAM330
      pam340: PAM340
      pam350: PAM350
      pam360: PAM360
      pam370: PAM370
      pam380: PAM380
      pam390: PAM390
      pam40: PAM40
      pam400: PAM400
      pam410: PAM410
      pam420: PAM420
      pam430: PAM430
      pam440: PAM440
      pam450: PAM450
      pam460: PAM460
      pam470: PAM470
      pam480: PAM480
      pam490: PAM490
      pam50: PAM50
      pam500: PAM500
      pam60: PAM60
      pam70: PAM70
      pam80: PAM80
      pam90: PAM90

  gap-open:
    name: Gap open penalty
    description: Gap opening penalty. Must be negative.
    type: float
    min: -100
    max: 0
    default: -12

  gap-extension:
    name: Gap extension penalty
    description: Gap extension penalty. Must be negative.
    type: float
    min: -100
    max: 0
    default: -1

  center:
    name: Center
    description: Center parameter. Should be negative.
    type: float
    min: -100
    max: 0
    default: 0

  hydro:
    name: Hydro
    description: Window size for determining whether a region is hydrophobic.
    type: int
    min: 0
    max: 100
    default: 5

  hydrofactor:
    name: Hydrofactor
    description: Multiplier for gap open/close penalties in hydrophobic
      regions.
    type: float
    min: 0
    max: 10
    default: 1.2

  min-anchor-score:
    name: Minimum anchor score
    description: Minimum score a column must have to be an anchor
      (default depends on the profile scoring function!)
    type: float
    min: 0
    max: 10
    default: 1.2

  min-smoothed-anchor-score:
    name: Minimum smoothed anchor score
    description: Minimum score a column must have to be an anchor 
      (default depends on the profile scoring function!)
    type: float
    min: 0
    max: 10
    default: 1.2

  cluster-first:
    name: Cluster1
    description: Clustering method to use on the iteration 1
    type: choice
    default: upgma
    choices:
      upgma: upgma

  cluster-remaining:
    name: Cluster2
    description: Clustering method to use on the interation 2 and onwards
    type: choice
    default: upgmb
    choices:
      upgmb: upgmb
      neighborjoining: neighborjoining

  weight-scheme-1:
    name: Sequence weighting scheme 1
    description: 'Sequence weighting scheme to use on the iteration 
      1 and 2.
      none=all sequences have equal weight;
      henikoff=Henikoff &amp; Henikoff weighting scheme;
      henikoffpb=Modified Henikoff scheme as used in PSI-BLAST;
      clustalw=CLUSTALW method;
      threeway=Gotoh three-way method;'
    type: choice
    choices:
      none: none
      henikoff: henikoff
      henikoffpb: henikoffpb
      gsc: gsc
      clustalw: clustalw
      threeway: threeway
    default: clustalw

  weight-scheme-2:
    name: Sequence weighting scheme 2
    description: 'Sequence weighting scheme to use on the iteration
      3 and all subsequent iterations for tree-dependent refinement.
      none=all sequences have equal weight;
      henikoff=Henikoff &amp; Henikoff weighting scheme;
      henikoffpb=Modified Henikoff scheme as used in PSI-BLAST;
      clustalw=CLUSTALW method;
      threeway=Gotoh three-way method'
    type: choice
    choices:
      none: none
      henikoff: henikoff
      henikoffpb: henikoffpb
      gsc: gsc
      clustalw: clustalw
      threeway: threeway
    default: clustalw

  distance1:
    name: Distance1
    description: Distance measure for iteration 1. Defaults Kmer6_6
      (for amino ) or Kmer4_6 (for nucleo)
    type: choice
    choices:
      kmer6_6: kmer6_6
      kmer20_3: kmer20_3
      kbit20_3: kbit20_3
      kmer20_4: kmer20_4
      kmer4_6: kmer4_6
    default: kmer6_6

command:
- muscle

args:
  _clwstrict:
    arg: -clwstrict
  _quiet:
    arg: -quiet
    default: 'true'
  _verbose:
    arg: -verbose
    default: 'true'
  _nocore:
    arg: -nocore
    default: 'true'
  _log:
    arg: -log $(value)
    default: stat.log
  _output:
    arg: -out $(value)
    default: output.fasta
  input:
    arg: -in $(value)
  anchor:
    arg: -$(value)
  brenner:
    arg: -brenner
  dimer:
    arg: -dimer
  diagonal:
    arg: -diags
  diagonal-first:
    arg: -diags1
  profile-scoring:
    arg: -$(value)
  sequence-type:
    arg: -seqtype $(value)
  maxiters:
    arg: -maxiters $(value)
  diagonal-break:
    arg: -diagbreak $(value)
  diagonal-length:
    arg: -diaglength $(value)
  diagonal-margin:
    arg: -diagmargin $(value)
  anchor-spacing:
    arg: -anchorspacing $(value)
  matrix:
    arg: -matrix ${SLIVKA_HOME}/matrices/$(value)
  gap-open:
    arg: -gapopen $(value)
  gap-extension:
    arg: -gapextend $(value)
  center:
    arg: -center $(value)
  hydro:
    arg: -hydro $(value)
  hydrofactor:
    arg: -hydrofactor $(value)
  min-anchor-score:
    arg: -minbestcolscore $(value)
  min-smoothed-anchor-score:
    arg: -minsmoothscore $(value)
  cluster-first:
    arg: -cluster1 $(value)
  cluster-remaining:
    arg: -cluster2 $(value)
  weight-scheme-1:
    arg: -weight1 $(value)
  weight-scheme-2:
    arg: -weight2 $(value)
  distance1:
    arg: -distance1 $(value)

outputs:
  alignment:
    path: output.fasta
    media-type: application/fasta
  log:
    path: stat.log
    media-type: text/plain
  error-log:
    path: stderr
    media-type: text/plain

execution:
  runners:
    default:
      type: SlivkaQueueRunner

tests:
- applicable-runners: ["default"]
  parameters:
    input: ${SLIVKA_HOME}/testdata/uniref50.fa
  timeout: 5
...
